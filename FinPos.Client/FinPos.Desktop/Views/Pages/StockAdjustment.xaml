<Page x:Class="FinPos.Client.Views.UserControls.StockAdjustment" 
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:FinPos.Client.Views.UserControls"
      xmlns:converter="clr-namespace:FinPos.Client.VisibilityConverter"
      xmlns:myControl="clr-namespace:FinPos.Client.Controls"
      xmlns:p="http://markupprogramming.codeplex.com/markup/programming"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:localX="clr-namespace:FinPos.Client.Controls"
      mc:Ignorable="d" 
      Name="StockManagementPage"
      Title="StockManagement">

    <Page.Resources>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="35" />
            <Setter Property="SeparatorBrush" Value="#fff" />
            <Setter Property="Background" Value="#1f579c"/>
            <Setter Property="Foreground" Value="#fff"/>
            <Setter Property="Padding" Value="5 0 0 0"/>
        </Style>
        <Style x:Key="datePickerStyle" TargetType="{x:Type DatePicker}">
            <Setter Property="Height" Value="40"/>
            <!--<Setter Property="Width" Value="160"/>-->
            <Setter Property="Margin" Value="0 -10 5 0"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{DynamicResource darkBlueSolidBrush}"/>
            <Setter Property="TextBlock.FontWeight" Value="Normal"/>
            <Setter Property="TextBlock.FontStyle" Value="Normal"/>
            <Setter Property="TextBlock.FontSize" Value="15"/>
            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
            <Setter Property="TextBlock.LineHeight" Value="20"/>
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource darkBlueSolidBrush}"/>
            <Setter Property="TextBlock.Background" Value="{DynamicResource lightBlueSolidBrush}"/>
        </Style>
        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Text" Value="Select Date" />
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter
            Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MetroButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="#EEEEEEEE"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="OpacityMask" Value="#AA888888"/>
                                <Setter Property="Margin" Value="2 1" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderThickness" Value="0"/>
                                <!--<Setter Property="Background" Value="DimGray"/>-->
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- This style is used for buttons, to remove the WPF default 'animated' mouse over effect -->
        <Style x:Key="MyButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="0"
                            Padding="0" 
                            BorderBrush="Transparent" 
                            CornerRadius="0" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsFocused, ElementName=TextBlock}" Value="true">
                    <Setter Property="Background" Value="Black" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>



    <Grid   Margin="0,0,15,0" HorizontalAlignment="Stretch">
        <Grid Grid.Row="1" VerticalAlignment="Top">
            <Grid.RowDefinitions >
                <RowDefinition  Height="55" />
                <RowDefinition  Height="*" />
                <RowDefinition  Height="83" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border BorderThickness="0 0 0 1" BorderBrush="#e2e2e2" Margin="15,0,15,0" >

                <Grid  Grid.Row="0" Name="SearchPanel" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="0*"/>
                    </Grid.ColumnDefinitions>
                    <Label FontSize="18" Foreground="#303030" Margin="0 10 0 0" Height="40" VerticalAlignment="Bottom"  DataContext="{Binding Source={StaticResource ResourceKey=stockAdjustmentModel}}">Stock Adjustment</Label>


                </Grid>
            </Border>



 

                <Grid Background="#fff" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="1" Name="companyGrid"   Margin="15 15 15 0" VerticalAlignment="Top"   HorizontalAlignment="Stretch"  >
                <!--<Grid.CommandBindings>
                    <CommandBinding Command="New" CanExecute="AddCustomer_CanExecute"/>
                </Grid.CommandBindings>-->
                <Grid.Resources>
                    <converter:InverseBooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <!--<RowDefinition Height="43*"/>
                    <RowDefinition Height="357*"/>-->
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <!--<ColumnDefinition Width="37*"/>
                    <ColumnDefinition Width="553*"/>-->
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Popup  Name="productPopUp" Height="380"  Width="600" Placement="Center"  PlacementTarget="{Binding ElementName=lvOpeningStock}">
                    <i:Interaction.Behaviors>
                        <myControl:MouseDragPopupBehavior></myControl:MouseDragPopupBehavior>
                    </i:Interaction.Behaviors>
                    <Grid  VerticalAlignment="Center" >

                        <DockPanel LastChildFill="True" Margin="0,0,0,0" Width="600" >

                            <Grid DockPanel.Dock="left" Width="600">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="600" />
                                    <ColumnDefinition Width="600" />
                                    <ColumnDefinition Width="600" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="40" />
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="300" />
                                </Grid.RowDefinitions>
                                <Grid Background="#1f579c" HorizontalAlignment="Left"  Width="600" Grid.ColumnSpan="2"   >
                                    <TextBlock Name="lbHeader" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15 6" FontSize="18" Foreground="#fff" Text="{StaticResource ResourceKey=openingstock_popupHeader}"></TextBlock>
                                    <Button Style="{StaticResource ResourceKey=MyButtonStyle}" Name="btn_close" Background="Transparent" HorizontalAlignment="Right" BorderThickness="0" Click="btn_close_Click">
                                        <Image Source="{StaticResource ResourceKey=close}" Width="13" Margin="15 0" Cursor="Hand">
                                        </Image>
                                    </Button>
                                </Grid>



                                <Border  BorderThickness="1 1 1 0" BorderBrush="#969696"   Grid.Row="1" >
                                    <Grid Background="#F2F2F2"  VerticalAlignment="Top" Margin="0" Height="40" Width="600">
                                        <DockPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,0,0"    >
                                            <TextBox Tag="Search" Text="Search" GotFocus="txt_search_GotFocus" LostFocus="txt_search_LostFocus" KeyUp="txt_search_KeyUp" FontSize="15" Padding="5 3"  Foreground="#969696"
                                  x:Name="txt_search" Margin="0 0 10 0"  Width="210" Height="28" VerticalContentAlignment="Center" BorderThickness="1" BorderBrush="#e2e2e2" >
                                            </TextBox>
                                        </DockPanel>
                                        <Button
                                
                                Name="arrow"
                                Width="10"
                                Height="10"
                                Margin="0 0 20 0"
                                Padding="0"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                BorderThickness="0"
                                Click="arrow_Click"
                                DockPanel.Dock="Right" Canvas.ZIndex="3">
                                            <Image Source="{StaticResource ResourceKey=clear_search}"  />
                                        </Button>
                                        <!--<TextBox Name="product_search"  HorizontalAlignment="Right" Margin="0 0 10 0"  Width="200" Padding="5 0" VerticalContentAlignment="Center" FontSize="14" Height="28" TextChanged="product_search_TextChanged"></TextBox>-->
                                    </Grid>
                                </Border>
                                <Grid   Grid.Row="2"   Background="#F2F2F2"  Margin="0,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="600" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.ColumnSpan="2">
                                        <Border x:Name="brd_exp" Visibility="Collapsed"  BorderThickness="1 0 1 1" BorderBrush="Black" Margin="0,0,0,0">
                                            <TextBlock Foreground="#808080" FontSize="18"  TextAlignment="Center" Padding="10 0 0 0" Height="193" VerticalAlignment="Bottom" Margin="0,0,0,106">No item found</TextBlock>
                                        </Border>
                                        <DataGrid BorderBrush="#969696" ScrollViewer.VerticalScrollBarVisibility="Auto" MaxHeight="300" BorderThickness="1 0 1 1" Visibility="Collapsed" MinHeight="300" RowHeaderWidth="0" GridLinesVisibility="None" HorizontalScrollBarVisibility="Disabled"  CanUserResizeRows="False" IsReadOnly="True" Name="dgProducts" PreviewMouseDoubleClick="dgProducts_PreviewMouseDoubleClick" AutoGenerateColumns="False" SnapsToDevicePixels="True" AlternatingRowBackground="#FFEAEAEA">
                                            <DataGrid.Resources>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Setter Property="Height" Value="20"></Setter>
                                                    <Setter Property="VerticalAlignment" Value="Center"></Setter>

                                                    <Style.Triggers>
                                                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                                                            <Setter Property="Background" Value="#ccc" />
                                                            <Setter Property="Foreground" Value="#000" />

                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGrid.Resources>
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding Id}" Header="{StaticResource ResourceKey=pop_product_id}" Width="70" IsReadOnly="True"></DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding ItemName}" Header="{StaticResource ResourceKey=pop_product_Name}" Width="120" IsReadOnly="True"></DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding RetailPrice}" Header="{StaticResource ResourceKey=pop_retail_price}" Width="110" IsReadOnly="True"></DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding TradePrice}" Header="{StaticResource ResourceKey=pop_trade_price}" Width="100" IsReadOnly="True"></DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding BarCode}" Header="{StaticResource ResourceKey=pop_bar_code}" Width="80" IsReadOnly="True"></DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding Description}" Header="{StaticResource ResourceKey=pop_description}" Width="120" IsReadOnly="True"></DataGridTextColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>
                                </Grid>

                            </Grid>
                        </DockPanel>
                    </Grid>

                </Popup>
                <Popup Margin="10,10,0,13" Name="PopupQuantityAlert"  Width="400" Height="300"  Placement="Center" PlacementTarget="{Binding ElementName=lvOpeningStock}">
                    <Grid  VerticalAlignment="Center" >
                        <DockPanel LastChildFill="True" Margin="0,0,0,0" Width="400" >
                            <Grid DockPanel.Dock="left" Width="400" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="400" />
                                    <ColumnDefinition Width="440" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50" />
                                    <RowDefinition Height="50"/>
                                    <RowDefinition Height="240" />
                                </Grid.RowDefinitions>
                                <Grid Background="#1f579c" HorizontalAlignment="Left"  Width="400" Grid.ColumnSpan="2">
                                    <TextBlock Name="lbPopHeader" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15 6" FontSize="18" Foreground="#fff" Text="{StaticResource ResourceKey=stock_adjustment}"></TextBlock>
                                    <Button Style="{StaticResource ResourceKey=MyButtonStyle}"   Background="Transparent" HorizontalAlignment="Right" BorderThickness="0" Name="PopupQuantityAlertClose" Click="PopupQuantityAlertClose_Click">
                                        <Image Source="{StaticResource ResourceKey=close}" Width="13" Margin="15 0" Cursor="Hand">
                                        </Image>
                                    </Button>
                                </Grid>
                                <Border BorderBrush="#ccc" BorderThickness="1" Grid.Row="1" >
                                    <Grid Background="#eaeaea">
                                        <TextBlock VerticalAlignment="Center" Foreground="#000" HorizontalAlignment="Center" Name="quantAlert">

                                        </TextBlock>
                                    </Grid>
                                </Border>
                                <Grid  Grid.Row="2" Background="#f1f1f1" Margin="0,0,0,40"  >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="400" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <Grid  Grid.ColumnSpan="2">
                                        <DataGrid Name="dgProQuant" FontWeight="Normal" MinHeight="200" Width="400" RowHeaderWidth="0" GridLinesVisibility="None"  HorizontalScrollBarVisibility="Disabled"  CanUserResizeRows="False" IsReadOnly="True" AutoGenerateColumns="False" SnapsToDevicePixels="True" AlternatingRowBackground="#FFEAEAEA">
                                            <DataGrid.Resources>
                                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                                    <Setter Property="Padding" Value="20 0 10 0"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                    <Setter Property="Height" Value="25" />
                                                    <Setter Property="SeparatorBrush" Value="#fff" />
                                                    <Setter Property="Background" Value="#1f579c"/>
                                                    <Setter Property="Foreground" Value="#fff"/>
                                                </Style>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Setter Property="Height" Value="20"></Setter>
                                                    <Setter Property="VerticalAlignment" Value="Center"></Setter>
                                                    <Setter Property="Padding" Value="20 0 10 0"/>
                                                    <Setter Property="Foreground" Value="Blue"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                                <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                                                            <Setter Property="Background" Value="#ccc" />
                                                            <Setter Property="Foreground" Value="#000" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGrid.Resources>
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding ProductName}" Header="{StaticResource ResourceKey=stock_product_name}" Foreground="#000" Width="200" IsReadOnly="True"></DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding AvailQuantity}" Header="{StaticResource ResourceKey=stock_available_quantity}" Foreground="#000" Width="200" IsReadOnly="True"></DataGridTextColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </DockPanel>
                    </Grid>
                </Popup>
                <ListView  Name="lvStockAdjustment" ScrollViewer.HorizontalScrollBarVisibility="Hidden"  ScrollViewer.VerticalScrollBarVisibility="Auto"  Background="#fff" BorderThickness="0" SelectionMode="Single"   BorderBrush="Transparent" HorizontalAlignment="Stretch"  Margin="0" Loaded="lvStockAdjustment_Loaded" SizeChanged="lvStockAdjustment_SizeChanged">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn>
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader  IsHitTestVisible="False"    Background="#1f579c" Foreground="#fff" FontSize="14"  Padding="10 8" Margin="-2 0 0 0" Tag="Name"  HorizontalContentAlignment="Left" Content="{StaticResource  ResourceKey=os_product_name}" HorizontalAlignment="Stretch"></GridViewColumnHeader>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock  HorizontalAlignment="Stretch" Margin="-6 0 -10 0" Height="40"  FontSize="13" Padding="10 7 10 7">
                                            <TextBlock.Resources>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Background" Value="#f5f5f5" />
                                                    <Setter Property="Foreground" Value="#000"/>
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                                                    Value="True">
                                                            <Setter Property="Background" Value="#ccc" />
                                                            <Setter Property="Foreground" Value="#000"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Resources>
                                         <TextBox Name="txtProduct" Background="#fff" Width="auto" MinWidth="110" Margin="0 0 0 0" Height="25"  BorderThickness="1" BorderBrush="#e7e7e7"  VerticalContentAlignment="Center"  IsReadOnly="True"  Foreground="#333"  FontSize="13" Padding="5 0 5 0" Text="{Binding ProductName,UpdateSourceTrigger=PropertyChanged}" PreviewMouseDown="txtProduct_PreviewMouseDown" ></TextBox>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn>
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader     IsHitTestVisible="False" HorizontalContentAlignment="Left"  Background="#1f579c" Foreground="#fff" FontSize="14"  Padding="10 8" Content="{StaticResource  ResourceKey=current_stock}" HorizontalAlignment="Stretch"></GridViewColumnHeader>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock   HorizontalAlignment="Stretch" Height="40"  Margin="-10 0"    FontSize="13" Padding="10 7 10 7" Text="{Binding CurrentStock}" >
                                            <TextBlock.Resources>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Background" Value="#f5f5f5" />
                                                    <Setter Property="Foreground" Value="#000"/>
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                                                    Value="True">
                                                            <Setter Property="Background" Value="#ccc" />
                                                            <Setter Property="Foreground" Value="#000"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Resources>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn  >
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader   IsHitTestVisible="False" HorizontalContentAlignment="Left"  Background="#1f579c" FontSize="14" Foreground="#fff" Padding="10 8"  Content="{StaticResource ResourceKey=quantity}" HorizontalAlignment="Stretch"></GridViewColumnHeader>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock  HorizontalAlignment="Stretch" Height="40"   Margin="-10 0"   FontSize="13" Padding="15 7 10 7">
                                            <TextBlock.Resources>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Background" Value="#F5f5f5" />
                                                    <Setter Property="Foreground" Value="#000"/>
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                                                    Value="True">
                                                            <Setter Property="Background" Value="#ccc" />
                                                            <Setter Property="Foreground" Value="#000"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Resources>
                                        <TextBox Background="#fff" Width="auto" MinWidth="110"
                                                 Text="{Binding Quantity}"
                                                 Height="25" Margin="0 0 0 0"  BorderThickness="1" BorderBrush="#e7e7e7"  VerticalContentAlignment="Center"  Foreground="#333"  FontSize="13" Padding="5 0 5 0"  PreviewTextInput="TextBox_PreviewTextInput"></TextBox>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn   >
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader   IsHitTestVisible="False" HorizontalContentAlignment="Left"  Background="#1f579c" FontSize="14" Foreground="#fff" Padding="10 8"  Content="{StaticResource ResourceKey=stock_reason}" HorizontalAlignment="Stretch"></GridViewColumnHeader>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock  HorizontalAlignment="Stretch" Height="40" Margin="-10 0"   FontSize="13" Padding="15 7 10 7">
                                            <TextBlock.Resources>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Background" Value="#f5f5f5" />
                                                    <Setter Property="Foreground" Value="#000"/>
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                                                    Value="True">
                                                            <Setter Property="Background" Value="#ccc" />
                                                            <Setter Property="Foreground" Value="#000"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Resources>
                                       <TextBox Background="#fff" Width="auto" MinWidth="110"  AcceptsReturn="True" TextWrapping="Wrap" SpellCheck.IsEnabled="True" AcceptsTab="True"   Height="25" Margin="0 0 0 0"  BorderThickness="1" BorderBrush="#e7e7e7"  VerticalContentAlignment="Center" Foreground="#333"  FontSize="15" Padding="5 0 5 0" Text="{Binding Reason}" >
                                                 
                                                  </TextBox>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn>
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader  IsHitTestVisible="False" HorizontalContentAlignment="Left"  Background="#1f579c" FontSize="14" Foreground="#fff" Padding="10 8"  Content="{StaticResource ResourceKey=batch_no}" HorizontalAlignment="Stretch"></GridViewColumnHeader>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Stretch" Height="40" Margin="-10 0"   FontSize="13" Padding="15 7 10 7">
                                            <TextBlock.Resources>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Background" Value="#f5f5f5" />
                                                    <Setter Property="Foreground" Value="#000"/>
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                                                    Value="True">
                                                            <Setter Property="Background" Value="#ccc" />
                                                            <Setter Property="Foreground" Value="#000"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Resources>
                                        <TextBox Background="#fff" Width="auto" MinWidth="110"  Height="25" Margin="0 0 0 0"  BorderThickness="1" BorderBrush="#e7e7e7"  VerticalContentAlignment="Center"   Foreground="#333"  FontSize="15" Padding="5 0 5 0" Text="{Binding BatchNo}" ></TextBox>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn>
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader   IsHitTestVisible="False" HorizontalContentAlignment="Left"  Background="#1f579c" Foreground="#fff"    Padding="10 8" FontSize="14"   Content="{StaticResource  ResourceKey=expiry_date}" HorizontalAlignment="Stretch" Click="GridViewColumnHeader_Click_1"></GridViewColumnHeader>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock  HorizontalAlignment="Stretch" Height="40" Margin="-10 0"   FontSize="13" Padding="10 5  10 0">
                                            <TextBlock.Resources>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Background" Value="#f5f5f5" />
                                                    <Setter Property="Foreground" Value="#000"/>
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                                                    Value="True">
                                                            <Setter Property="Background" Value="#ccc" />
                                                            <Setter Property="Foreground" Value="#000"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Resources>
                                        <DatePicker Width="auto"  MinWidth="110" Height="30" Name="MonthlyCalendar" Background="#fff" 
                                                DisplayDate="3/5/2010"
                                                DisplayDateEnd="3/31/2025"
                                                FirstDayOfWeek="Tuesday"
                                                IsTodayHighlighted="True"
                                                SelectedDate="{Binding ExpiryDate}"
                                                Style="{StaticResource ResourceKey=DatePickerStyle1}"
                                                xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                        </DatePicker>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                        <!--Style="{StaticResource datePickerStyle}"-->
                    </ListView.View>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" >
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}">
                                            <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <EventSetter  Event="PreviewMouseLeftButtonDown" Handler="lvStockAdjustment_PreviewMouseLeftButtonDown" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
                <!--<Border BorderThickness="1" BorderBrush="#FFFFFF" Background="#FFFFFF"
            Visibility="{Binding ElementName=lvStockAdjustment, Path=HasItems, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock> No items</TextBlock>
                </Border>-->

            </Grid>
        </Grid>
        <StackPanel Margin="0,0,0,0" Height="66" Background="#dcdcdc"  VerticalAlignment="Bottom">
            <Button Style="{StaticResource MyButtonStyle}" IsEnabled="False" Name="btn_remove" Click="btn_remove_Click" Cursor="Hand" BorderThickness="0" BorderBrush="Transparent" Margin="0,14,15,0"  Background="#eb5151" FontSize="14" Foreground="#fff" Width="90" Height="40" HorizontalAlignment="Right" Grid.Column="1" >
                <StackPanel>
                    <!--<Image Source="C:\Users\Test-user\documents\visual studio 2013\Projects\ModernUINavigationApp6\ModernUINavigationApp6\images\clear.png" Height="17"  HorizontalAlignment="left"/>-->

                    <!--<Image Source="C:\Users\Test-user\documents\visual studio 2013\Projects\ModernUINavigationApp6\ModernUINavigationApp6\images\clear.png" Height="17"  HorizontalAlignment="left"/>-->
                    <Image Source="{StaticResource ResourceKey=clear_icon}"   Height="14"  HorizontalAlignment="left"   Width="14"/>

                    <TextBlock  Margin="18,-18,0,0" FontSize="14" LineHeight="auto" Height="19" ><Run Text="{StaticResource ResourceKey=remove}"/></TextBlock>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource MyButtonStyle}" Name="btn_save"  Cursor="Hand" BorderThickness="0" BorderBrush="Transparent" Margin="0,-40,203,0" Background="#0091EA" FontSize="14" Foreground="#fff" Width="90" Height="40" HorizontalAlignment="Right" Click="btn_save_Click"  >
                <StackPanel >
                    <!--<Image Source="C:\Users\Test-user\documents\visual studio 2013\Projects\ModernUINavigationApp6\ModernUINavigationApp6\images\view.png" Height="18" Margin="0,0,152,0"/>-->
                    <Image Source="{StaticResource ResourceKey=save_icon}"  Height="14"  HorizontalAlignment="left"   Width="14"/>
                    <TextBlock Margin="18,-18,0,0" FontSize="14" LineHeight="auto" Height="19" >
                        <TextBlock.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="0.156"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </TextBlock.RenderTransform><Run Text="{StaticResource  ResourceKey=save}"/></TextBlock>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource MyButtonStyle}"  Name="btn_addRow"  Cursor="Hand" BorderThickness="0" BorderBrush="Transparent"   Margin="0,-40,109,0" Background="#0091EA" FontSize="14" Foreground="#fff" Width="90" Height="40" HorizontalAlignment="Right" Click="btn_addRow_Click" >
                <StackPanel >
                    <!--<Image Source="C:\Users\Test-user\documents\visual studio 2013\Projects\ModernUINavigationApp6\ModernUINavigationApp6\images\view.png" Height="18" Margin="0,0,152,0"/>-->
                    <Image Source="{StaticResource ResourceKey=add_icon}" Height="14"  HorizontalAlignment="left"   Width="14"/>
                    <TextBlock Margin="18,-18,0,0" FontSize="14" LineHeight="auto" Height="19" ><Run Text="{StaticResource ResourceKey=add_row}"/></TextBlock>
                </StackPanel>
            </Button>
        </StackPanel>
    </Grid>
</Page>
   
